<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="MAIN" Id="{cb2c011b-217c-4530-a688-e51bc0e036d8}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR
	sFilePath : T_MaxString := 'E:\Projects\Twincat\AdventOfCode\Day02\Day2Input.txt'; //'C:\temp\HelloWorld.txt';// 
	fb_FileReader : SH_FileReader.FileReader;
	bFileReaderDone : BOOL;		
	stFileReaderError : SH_FileReader.ERROR;

	nLoopIndexLoadBalancer : USINT;
	nOffsetInnerLoop : UINT;
	nUpperOffsetInnerLoop : UINT;
	nLoopIndexFileContentArray : UINT;
	sCurrentLine : STRING(iC_MAX_STRING_LENGTH);

	fb_Analysis : Analysis;
	bStrictlyIncreasing : BOOL;
	bStrictlyDecreasing : BOOL;
	bAllClose : BOOL;
	bReportIsSafe : BOOL;
	nNumSafeReports : UINT;
	
	arsAnalyzedArray : ARRAY[0..1000] OF STRING;
	
	bReadFile : BOOL;
	bAnalyzeFile : BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[fb_FileReader();
fb_Analysis();

bFileReaderDone := fb_FileReader.ReadFile(bExecute := bReadFile, sFilePath := sFilePath, stError => stFileReaderError);
IF bReadFile THEN
	bReadFile := FALSE;
END_IF

IF bFileReaderDone AND bAnalyzeFile THEN
	nNumSafeReports := 0;
	
	IF nLoopIndexLoadBalancer < 10 THEN
		CASE nLoopIndexLoadBalancer OF
			0:
				a_AnalyzeSection();
			1:
				a_AnalyzeSection();
			2:
				a_AnalyzeSection();
			3:
				a_AnalyzeSection();
			4:
				a_AnalyzeSection();
			5:
				a_AnalyzeSection();
			6:
				a_AnalyzeSection();
			7:
				a_AnalyzeSection();
			8:
				a_AnalyzeSection();
			9:
				a_AnalyzeSection();
		END_CASE
		nLoopIndexLoadBalancer := nLoopIndexLoadBalancer + 1;	
	ELSE
		nLoopIndexLoadBalancer := 0;
		bAnalyzeFile := FALSE;	
	END_IF
END_IF]]></ST>
    </Implementation>
    <Action Name="a_AnalyzeSection" Id="{7f0f009c-232a-4f33-8336-a644f5d2d9ec}">
      <Implementation>
        <ST><![CDATA[nOffsetInnerLoop := nLoopIndexLoadBalancer * (iC_MAX_NUM_LINES_IN_FILE/10);
nUpperOffsetInnerLoop := nOffsetInnerLoop+(iC_MAX_NUM_LINES_IN_FILE/10)-1;
FOR nLoopIndexFileContentArray := nLoopIndexLoadBalancer TO nUpperOffsetInnerLoop DO
	sCurrentLine := fb_FileReader.GetLineByIndex(nLoopIndexFileContentArray);
	fb_Analysis.AnalyzeLine(sTextLine := sCurrentLine, bIncreasing => bStrictlyIncreasing, bDecreasing => bStrictlyDecreasing, bClose => bAllClose);
	bReportIsSafe := (bStrictlyDecreasing OR bStrictlyIncreasing) AND bAllClose;
	IF bReportIsSafe THEN
		arsAnalyzedArray[nLoopIndexFileContentArray] := CONCAT(sCurrentLine, ' - SAFE');
		nNumSafeReports := nNumSafeReports + 1;	
	ELSE
		arsAnalyzedArray[nLoopIndexFileContentArray] := CONCAT(sCurrentLine, ' - UNSAFE');	
	END_IF
END_FOR]]></ST>
      </Implementation>
    </Action>
  </POU>
</TcPlcObject>